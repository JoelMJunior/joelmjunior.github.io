{"title":"Superliga de Vôlei Feminino 2021-2022","markdown":{"yaml":{"title":"Superliga de Vôlei Feminino 2021-2022"},"headingText":"Dados das partidas da temporada 2021/2022","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE, echo=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n```{r, include=FALSE, echo=FALSE}\nif(!require(dplyr))\n  install.packages(\"dplyr\")\nif(!require(ggplot2))\n  install.packages(\"ggplot2\")\nif(!require(DT))\n  install.packages(\"DT\")\nlibrary(knitr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(rmarkdown)\n```\n\n\n```{r, echo=FALSE}\nSL_2122 <- read.csv(\"superliga_202122.csv\")\npaged_table(SL_2122)\n```\n\n-   Foram analisadas todas as partidas da Superliga:\n\n```{r, echo=FALSE}\nnPartidas <- max(SL_2122$Jogo)\nnPartidas\n```\n\n-   Os jogos são divididos em duas fases:\n\n```{r, echo=FALSE}\nunique(SL_2122$Fase)\n```\n\n```{r, echo=FALSE}\nSL_Fases <- group_by(SL_2122, Fase)\n```\n\n```{r, echo=FALSE}\ntb_fases <- reframe(SL_Fases,\n                    Jogos = (max(Jogo) - min(Jogo)) + 1,\n                    Equipes = length(unique(Time)),\n                    Jogadoras = length(unique(Jogadora)))\nkable(tb_fases)\n```\n\n```{r, echo=FALSE}\npie(tb_fases$Jogos, labels = tb_fases$Fase, main = \"Fases da competição (jogos)\")\n```\n\n```{r, echo=FALSE}\nnEquipes <- length(unique(SL_2122$Time))\nnJogadoras <- length(unique(SL_2122$Jogadora))\n```\n\n## ANÁLISE DE SAQUES (Saques errados e aces)\n\n### Saques Errados (total)\n\n```{r, echo=FALSE}\ntb_saquesErr <- reframe(SL_2122,\n                        saquesErradosTotal = sum(SL_2122$Serviço.Err, na.rm = T),\n                        mediaSaqErrPartida = saquesErradosTotal/nPartidas)\ncolnames(tb_saquesErr) <- c(\"Saques errados total\", \"Saques errados/partida\")\nkable(tb_saquesErr)\n```\n\n### Saques Errados (por fase)\n\n```{r, echo=FALSE}\ntb_saqErrFases <- reframe(SL_Fases,\n                          saquesErrados = sum(Serviço.Err, na.rm = T),\n                          mediaSaqErrPartida = saquesErrados / ((max(Jogo) - min(Jogo)) + 1),\n                          mediaSaqErrTime = saquesErrados / length(unique(Time)),\n                          mediaSaqErrJogadora = saquesErrados / length(unique(Jogadora)))\ncolnames(tb_saqErrFases) <- c(\"Fase\", \"Saques errados\", \"Saques err./partida\", \"Saques err./time\", \"Saques err./jogadora\")\nkable(tb_saqErrFases)\n```\n\n```{r, echo=FALSE}\nSL_TimexFase <- group_by(SL_Fases, Fase, Time)\n```\n\n### Saques Errados (por time na fase Classificatória)\n\n```{r}\ntb_saqTime <- reframe(SL_TimexFase,\n                      saquesErrados = sum(Serviço.Err, na.rm = T),\n                      mediaSaqErrPartida = saquesErrados/22) %>%\n              filter(Fase == 'classificatoria') %>%\n              select(-Fase) %>%\n              arrange(desc(saquesErrados))\ntb_saqTime <- transform(tb_saqTime, Time = reorder(Time, -saquesErrados))\ncolnames(tb_saqTime) <- c(\"Time\", \"Saques errados\", \"Saques err./partida\")\nkable(tb_saqTime)\n```\n\n```{r, echo=FALSE}\nggplot(tb_saqTime, aes(x = Time, y = `Saques errados`)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  labs(title = \"Saques errados por time (Classificatória)\", x = \"Times\", y = \"Saques errados\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))\n```\n\n```{r, echo=FALSE}\nboxplot(tb_saqTime$`Saques errados`)\n```\n\n```{r, echo=FALSE}\nSL_Jogadora <- group_by(SL_2122, Jogadora, Time)\n```\n\n### Saques Errados (por jogadora em toda a competição)\n\n```{r}\ntb_saqErrJogadora <- reframe(SL_Jogadora,\n                             saquesErrados = sum(Serviço.Err, na.rm = T),\n                             partidas = n(),\n                             mediaSaqErrPartida = saquesErrados/partidas) %>%\n                     #filter(Time %in% 'DENTIL PRAIA CLUBE') %>%\n                     filter(saquesErrados > 20) %>%\n                     arrange(desc(saquesErrados))\ncolnames(tb_saqErrJogadora) <- c(\"Jogadora\", \"Time\", \"Saques errados\", \"Partidas\", \"Saques err./partida\")\npaged_table(tb_saqErrJogadora)\n```\n\n```{r, echo=FALSE}\nboxplot(tb_saqErrJogadora$`Saques errados`)\n```\n\n## Aces - Pontos de saque (total)\n\n```{r, echo=FALSE}\ntb_acesTotal <- reframe(SL_2122,\n                        acesTotal = sum(SL_2122$Serviço.Ace, na.rm = T),\n                        mediaAcesPartida = acesTotal/nPartidas)\ncolnames(tb_acesTotal) <- c(\"Aces total\", \"Aces/partida\")\nkable(tb_acesTotal)\n```\n\n### Aces (por fase)\n\n```{r, echo=FALSE}\ntb_acesFases <- reframe(SL_Fases,\n                   aces = sum(Serviço.Ace, na.rm = T),\n                   mediaAcesPartida = aces / ((max(Jogo) - min(Jogo)) + 1),\n                   mediaAcesTime = aces / length(unique(Time)),\n                   mediaAcesJogadora = aces / length(unique(Jogadora)))\ncolnames(tb_acesFases) <- c(\"Fase\", \"Aces\", \"Aces/partida\", \"Aces/time\", \"Aces/jogadora\")\nkable(tb_acesFases)\n```\n\n### Aces (por time na fase Classificatória)\n\n```{r, echo=FALSE}\ntb_aceTime <- reframe(SL_TimexFase,\n                      aces = sum(Serviço.Ace, na.rm = T),\n                      mediaAces = aces/22) %>%\n              filter(Fase == 'classificatoria') %>%\n              select(-Fase) %>%\n              arrange(desc(aces))\ntb_aceTime <- transform(tb_aceTime, Time = reorder(Time, -aces))\ncolnames(tb_aceTime) <- c(\"Time\", \"Aces\", \"Aces/partida\")\nkable(tb_aceTime)\n```\n\n```{r, echo=FALSE}\nggplot(tb_aceTime, aes(x = Time, y = Aces)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  labs(title = \"Aces por time (Classificatória)\", x = \"Times\", y = \"Aces\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))\n```\n\n```{r, echo=FALSE}\nboxplot(tb_aceTime$Aces)\n```\n\n### Aces (por jogadora em toda a competição)\n\n```{r, echo=FALSE}\ntb_aceJogadora <- reframe(SL_Jogadora,\n                          aces = sum(Serviço.Ace, na.rm = T),\n                          partidas = n(),\n                          mediaAcePartida = aces/partidas) %>%\n                  #filter(Time %in% 'DENTIL PRAIA CLUBE') %>%\n                  filter(aces > 10) %>%\n                  arrange(desc(aces))\ncolnames(tb_aceJogadora) <- c(\"Jogadora\", \"Time\", \"Aces\", \"Partidas\", \"Aces/partida\")\npaged_table(tb_aceJogadora)\n```\n\n```{r, echo=FALSE}\nboxplot(tb_aceJogadora$Aces)\n```\n\n### Aces e saques errados (por time em toda a competição)\n\n```{r, echo=FALSE}\nSL_Time <- group_by(SL_2122, Time)\n```\n\n```{r, echo=FALSE}\n#Apenas para verificar que existem partidas faltando, como as partidas 8 e 77, por exemplo.\nSL_Jogo <- group_by(SL_2122, Jogo, Partida)\nreframe(SL_Jogo)\n```\n\n```{r, echo=FALSE}\ntb_aceSaqErrTime <- reframe(SL_Time,\n                        aces = sum(Serviço.Ace, na.rm = T),\n                        saquesErrados = sum(Serviço.Err, na.rm = T),\n                        saqErr_Ace = saquesErrados / aces,\n                        saldo = aces - saquesErrados) %>%\n                arrange(saqErr_Ace)\ncolnames(tb_aceSaqErrTime) <- c(\"Time\", \"Aces\", \"Saques errados\", \"Saques err./ace\", \"Saldo\")\nkable(tb_aceSaqErrTime)\n```\n\n### Aces e saques errados (por jogadora em toda a competição)\n\n```{r}\ntb_aceSaqErrJog <- reframe(SL_Jogadora,\n                           aces = sum(Serviço.Ace, na.rm = T),\n                           saquesErrados = sum(Serviço.Err, na.rm = T),\n                           saqErr_Ace = saquesErrados / aces,\n                           saldo = aces - saquesErrados) %>%\n                   filter(aces > 10) %>%\n                   arrange(desc(aces))\ncolnames(tb_aceSaqErrJog) <- c(\"Jogadora\", \"Time\", \"Aces\", \"Saques errados\", \"Saques err./ace\", \"Saldo\")\ndatatable(tb_aceSaqErrJog, options = list(order = list(3, 'desc')))\n```\n\n### Aces e saques errados (por categoria da fase da competição)\n\n```{r, echo=FALSE}\nSL_Cat <- group_by(SL_2122, Cat)\n```\n\n```{r, echo=FALSE}\ntb_aceSaqErrCat <- reframe(SL_Cat,\n                           aces = sum(Serviço.Ace, na.rm = T),\n                           saquesErrados = sum(Serviço.Err, na.rm = T),\n                           saqErr_Ace = saquesErrados / aces) %>%\n                   arrange(desc(aces))\ncolnames(tb_aceSaqErrCat) <- c(\"Categoria\", \"Aces\", \"Saques errados\", \"Saques err./ace\")\nkable(tb_aceSaqErrCat)\n```\n\n### Semifinal\n\n```{r, echo=FALSE}\nSL_2122 %>%\n  group_by(Jogo, Time, Vencedor) %>%\n  filter(Cat == 'semi') %>%\n  reframe(aces = sum(Serviço.Ace, na.rm = T),\n          saquesErrados = sum(Serviço.Err, na.rm = T),\n          saqErr_Ace = saquesErrados / aces,\n          saldo = aces - saquesErrados)\n```\n\n### Final\n\n```{r, echo=FALSE}\nSL_Cat %>%\n  group_by(Cat, Time) %>%\n  reframe(aces = sum(Serviço.Ace, na.rm = T),\n          saquesErrados = sum(Serviço.Err, na.rm = T),\n          saqErr_Ace = saquesErrados / aces,\n          saldo = aces - saquesErrados) %>%\n  filter(Cat == 'final') %>%\n  arrange(desc(aces))\n```\n\n### Quem foi o time vencedor?\n\n### Qual a relação entre essas variáveis de saque e o vencedor da partida?\n\n#### Troféu Viva-Volêi (Melhor jogadora da partida)\n\n```{r, echo=FALSE}\nreframe(SL_Jogadora,\n        trofeu = sum(VV, na.rm = T)) %>%\n  arrange(desc(trofeu))\n```\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE, echo=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n```{r, include=FALSE, echo=FALSE}\nif(!require(dplyr))\n  install.packages(\"dplyr\")\nif(!require(ggplot2))\n  install.packages(\"ggplot2\")\nif(!require(DT))\n  install.packages(\"DT\")\nlibrary(knitr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(rmarkdown)\n```\n\n# Dados das partidas da temporada 2021/2022\n\n```{r, echo=FALSE}\nSL_2122 <- read.csv(\"superliga_202122.csv\")\npaged_table(SL_2122)\n```\n\n-   Foram analisadas todas as partidas da Superliga:\n\n```{r, echo=FALSE}\nnPartidas <- max(SL_2122$Jogo)\nnPartidas\n```\n\n-   Os jogos são divididos em duas fases:\n\n```{r, echo=FALSE}\nunique(SL_2122$Fase)\n```\n\n```{r, echo=FALSE}\nSL_Fases <- group_by(SL_2122, Fase)\n```\n\n```{r, echo=FALSE}\ntb_fases <- reframe(SL_Fases,\n                    Jogos = (max(Jogo) - min(Jogo)) + 1,\n                    Equipes = length(unique(Time)),\n                    Jogadoras = length(unique(Jogadora)))\nkable(tb_fases)\n```\n\n```{r, echo=FALSE}\npie(tb_fases$Jogos, labels = tb_fases$Fase, main = \"Fases da competição (jogos)\")\n```\n\n```{r, echo=FALSE}\nnEquipes <- length(unique(SL_2122$Time))\nnJogadoras <- length(unique(SL_2122$Jogadora))\n```\n\n## ANÁLISE DE SAQUES (Saques errados e aces)\n\n### Saques Errados (total)\n\n```{r, echo=FALSE}\ntb_saquesErr <- reframe(SL_2122,\n                        saquesErradosTotal = sum(SL_2122$Serviço.Err, na.rm = T),\n                        mediaSaqErrPartida = saquesErradosTotal/nPartidas)\ncolnames(tb_saquesErr) <- c(\"Saques errados total\", \"Saques errados/partida\")\nkable(tb_saquesErr)\n```\n\n### Saques Errados (por fase)\n\n```{r, echo=FALSE}\ntb_saqErrFases <- reframe(SL_Fases,\n                          saquesErrados = sum(Serviço.Err, na.rm = T),\n                          mediaSaqErrPartida = saquesErrados / ((max(Jogo) - min(Jogo)) + 1),\n                          mediaSaqErrTime = saquesErrados / length(unique(Time)),\n                          mediaSaqErrJogadora = saquesErrados / length(unique(Jogadora)))\ncolnames(tb_saqErrFases) <- c(\"Fase\", \"Saques errados\", \"Saques err./partida\", \"Saques err./time\", \"Saques err./jogadora\")\nkable(tb_saqErrFases)\n```\n\n```{r, echo=FALSE}\nSL_TimexFase <- group_by(SL_Fases, Fase, Time)\n```\n\n### Saques Errados (por time na fase Classificatória)\n\n```{r}\ntb_saqTime <- reframe(SL_TimexFase,\n                      saquesErrados = sum(Serviço.Err, na.rm = T),\n                      mediaSaqErrPartida = saquesErrados/22) %>%\n              filter(Fase == 'classificatoria') %>%\n              select(-Fase) %>%\n              arrange(desc(saquesErrados))\ntb_saqTime <- transform(tb_saqTime, Time = reorder(Time, -saquesErrados))\ncolnames(tb_saqTime) <- c(\"Time\", \"Saques errados\", \"Saques err./partida\")\nkable(tb_saqTime)\n```\n\n```{r, echo=FALSE}\nggplot(tb_saqTime, aes(x = Time, y = `Saques errados`)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  labs(title = \"Saques errados por time (Classificatória)\", x = \"Times\", y = \"Saques errados\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))\n```\n\n```{r, echo=FALSE}\nboxplot(tb_saqTime$`Saques errados`)\n```\n\n```{r, echo=FALSE}\nSL_Jogadora <- group_by(SL_2122, Jogadora, Time)\n```\n\n### Saques Errados (por jogadora em toda a competição)\n\n```{r}\ntb_saqErrJogadora <- reframe(SL_Jogadora,\n                             saquesErrados = sum(Serviço.Err, na.rm = T),\n                             partidas = n(),\n                             mediaSaqErrPartida = saquesErrados/partidas) %>%\n                     #filter(Time %in% 'DENTIL PRAIA CLUBE') %>%\n                     filter(saquesErrados > 20) %>%\n                     arrange(desc(saquesErrados))\ncolnames(tb_saqErrJogadora) <- c(\"Jogadora\", \"Time\", \"Saques errados\", \"Partidas\", \"Saques err./partida\")\npaged_table(tb_saqErrJogadora)\n```\n\n```{r, echo=FALSE}\nboxplot(tb_saqErrJogadora$`Saques errados`)\n```\n\n## Aces - Pontos de saque (total)\n\n```{r, echo=FALSE}\ntb_acesTotal <- reframe(SL_2122,\n                        acesTotal = sum(SL_2122$Serviço.Ace, na.rm = T),\n                        mediaAcesPartida = acesTotal/nPartidas)\ncolnames(tb_acesTotal) <- c(\"Aces total\", \"Aces/partida\")\nkable(tb_acesTotal)\n```\n\n### Aces (por fase)\n\n```{r, echo=FALSE}\ntb_acesFases <- reframe(SL_Fases,\n                   aces = sum(Serviço.Ace, na.rm = T),\n                   mediaAcesPartida = aces / ((max(Jogo) - min(Jogo)) + 1),\n                   mediaAcesTime = aces / length(unique(Time)),\n                   mediaAcesJogadora = aces / length(unique(Jogadora)))\ncolnames(tb_acesFases) <- c(\"Fase\", \"Aces\", \"Aces/partida\", \"Aces/time\", \"Aces/jogadora\")\nkable(tb_acesFases)\n```\n\n### Aces (por time na fase Classificatória)\n\n```{r, echo=FALSE}\ntb_aceTime <- reframe(SL_TimexFase,\n                      aces = sum(Serviço.Ace, na.rm = T),\n                      mediaAces = aces/22) %>%\n              filter(Fase == 'classificatoria') %>%\n              select(-Fase) %>%\n              arrange(desc(aces))\ntb_aceTime <- transform(tb_aceTime, Time = reorder(Time, -aces))\ncolnames(tb_aceTime) <- c(\"Time\", \"Aces\", \"Aces/partida\")\nkable(tb_aceTime)\n```\n\n```{r, echo=FALSE}\nggplot(tb_aceTime, aes(x = Time, y = Aces)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  labs(title = \"Aces por time (Classificatória)\", x = \"Times\", y = \"Aces\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))\n```\n\n```{r, echo=FALSE}\nboxplot(tb_aceTime$Aces)\n```\n\n### Aces (por jogadora em toda a competição)\n\n```{r, echo=FALSE}\ntb_aceJogadora <- reframe(SL_Jogadora,\n                          aces = sum(Serviço.Ace, na.rm = T),\n                          partidas = n(),\n                          mediaAcePartida = aces/partidas) %>%\n                  #filter(Time %in% 'DENTIL PRAIA CLUBE') %>%\n                  filter(aces > 10) %>%\n                  arrange(desc(aces))\ncolnames(tb_aceJogadora) <- c(\"Jogadora\", \"Time\", \"Aces\", \"Partidas\", \"Aces/partida\")\npaged_table(tb_aceJogadora)\n```\n\n```{r, echo=FALSE}\nboxplot(tb_aceJogadora$Aces)\n```\n\n### Aces e saques errados (por time em toda a competição)\n\n```{r, echo=FALSE}\nSL_Time <- group_by(SL_2122, Time)\n```\n\n```{r, echo=FALSE}\n#Apenas para verificar que existem partidas faltando, como as partidas 8 e 77, por exemplo.\nSL_Jogo <- group_by(SL_2122, Jogo, Partida)\nreframe(SL_Jogo)\n```\n\n```{r, echo=FALSE}\ntb_aceSaqErrTime <- reframe(SL_Time,\n                        aces = sum(Serviço.Ace, na.rm = T),\n                        saquesErrados = sum(Serviço.Err, na.rm = T),\n                        saqErr_Ace = saquesErrados / aces,\n                        saldo = aces - saquesErrados) %>%\n                arrange(saqErr_Ace)\ncolnames(tb_aceSaqErrTime) <- c(\"Time\", \"Aces\", \"Saques errados\", \"Saques err./ace\", \"Saldo\")\nkable(tb_aceSaqErrTime)\n```\n\n### Aces e saques errados (por jogadora em toda a competição)\n\n```{r}\ntb_aceSaqErrJog <- reframe(SL_Jogadora,\n                           aces = sum(Serviço.Ace, na.rm = T),\n                           saquesErrados = sum(Serviço.Err, na.rm = T),\n                           saqErr_Ace = saquesErrados / aces,\n                           saldo = aces - saquesErrados) %>%\n                   filter(aces > 10) %>%\n                   arrange(desc(aces))\ncolnames(tb_aceSaqErrJog) <- c(\"Jogadora\", \"Time\", \"Aces\", \"Saques errados\", \"Saques err./ace\", \"Saldo\")\ndatatable(tb_aceSaqErrJog, options = list(order = list(3, 'desc')))\n```\n\n### Aces e saques errados (por categoria da fase da competição)\n\n```{r, echo=FALSE}\nSL_Cat <- group_by(SL_2122, Cat)\n```\n\n```{r, echo=FALSE}\ntb_aceSaqErrCat <- reframe(SL_Cat,\n                           aces = sum(Serviço.Ace, na.rm = T),\n                           saquesErrados = sum(Serviço.Err, na.rm = T),\n                           saqErr_Ace = saquesErrados / aces) %>%\n                   arrange(desc(aces))\ncolnames(tb_aceSaqErrCat) <- c(\"Categoria\", \"Aces\", \"Saques errados\", \"Saques err./ace\")\nkable(tb_aceSaqErrCat)\n```\n\n### Semifinal\n\n```{r, echo=FALSE}\nSL_2122 %>%\n  group_by(Jogo, Time, Vencedor) %>%\n  filter(Cat == 'semi') %>%\n  reframe(aces = sum(Serviço.Ace, na.rm = T),\n          saquesErrados = sum(Serviço.Err, na.rm = T),\n          saqErr_Ace = saquesErrados / aces,\n          saldo = aces - saquesErrados)\n```\n\n### Final\n\n```{r, echo=FALSE}\nSL_Cat %>%\n  group_by(Cat, Time) %>%\n  reframe(aces = sum(Serviço.Ace, na.rm = T),\n          saquesErrados = sum(Serviço.Err, na.rm = T),\n          saqErr_Ace = saquesErrados / aces,\n          saldo = aces - saquesErrados) %>%\n  filter(Cat == 'final') %>%\n  arrange(desc(aces))\n```\n\n### Quem foi o time vencedor?\n\n### Qual a relação entre essas variáveis de saque e o vencedor da partida?\n\n#### Troféu Viva-Volêi (Melhor jogadora da partida)\n\n```{r, echo=FALSE}\nreframe(SL_Jogadora,\n        trofeu = sum(VV, na.rm = T)) %>%\n  arrange(desc(trofeu))\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"superliga_21-22.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjetura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Pré-selecionado","listing-page-order-by-date-asc":"Mais velho","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Crescente","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Arquivo modificado","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Tudo","listing-page-no-matches":"Nenhum item correspondente"},"metadata":{"lang":"pt","fig-responsive":true,"quarto-version":"1.3.450","editor":"source","theme":"journal","smooth-scroll":true,"title":"Superliga de Vôlei Feminino 2021-2022"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}